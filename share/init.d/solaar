#!/bin/bash
### BEGIN INIT INFO
# Provides:          solaar
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Solaar Logitech Device Manager
# Description:       Daemon for managing Logitech wireless devices
### END INIT INFO

. /lib/lsb/init-functions

USER="solaar"
DAEMON_NAME="solaar-daemon"
DAEMON="/usr/bin/solaar-daemon"
PID_FILE="/var/run/solaar.pid"
LOCK_FILE="/var/lock/subsys/solaar"

start() {
    if [ -f $PID_FILE ] && kill -0 $(cat $PID_FILE) 2>/dev/null; then
        echo "$DAEMON_NAME is already running"
        return 1
    fi
    
    echo "Starting $DAEMON_NAME..."
    start-stop-daemon --start --quiet --pidfile $PID_FILE \
        --make-pidfile --background --chuid $USER \
        --exec $DAEMON -- --pid-file $PID_FILE
    
    if [ $? -eq 0 ]; then
        touch $LOCK_FILE
        echo "$DAEMON_NAME started successfully"
        return 0
    else
        echo "Failed to start $DAEMON_NAME"
        return 1
    fi
}

stop() {
    if [ ! -f $PID_FILE ] || ! kill -0 $(cat $PID_FILE) 2>/dev/null; then
        echo "$DAEMON_NAME is not running"
        return 1
    fi
    
    echo "Stopping $DAEMON_NAME..."
    start-stop-daemon --stop --quiet --pidfile $PID_FILE
    
    # Wait for process to stop
    for i in {1..10}; do
        if ! kill -0 $(cat $PID_FILE) 2>/dev/null; then
            break
        fi
        sleep 1
    done
    
    # Force kill if still running
    if kill -0 $(cat $PID_FILE) 2>/dev/null; then
        kill -9 $(cat $PID_FILE)
    fi
    
    rm -f $PID_FILE $LOCK_FILE
    echo "$DAEMON_NAME stopped"
    return 0
}

status() {
    if [ -f $PID_FILE ] && kill -0 $(cat $PID_FILE) 2>/dev/null; then
        echo "$DAEMON_NAME is running (PID: $(cat $PID_FILE))"
        return 0
    else
        echo "$DAEMON_NAME is not running"
        return 1
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac

exit $?